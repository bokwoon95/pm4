(input) file.html -> file.config.toml, etc -> output

/pm-templates is served at /pm-templates

/pm-assets is served at /pm-assets

in order to automatically generate a CRUD form for data group json as well as page json, the theme author will have to specify a json schema for each blob. Each json schema blob should contain enough information to meaningfully generate a form from it automatically.

no doubt, sometimes pages will have to run arbitrary SQL queries (only SELECTs) in order to generate the page data. this takes the form of goja scripts.

web ui is still possible; when used in single user mode it is enabled by default. No login wall at all. Straight to the URL dashboard.

pointing a URL at a resource needs some thinking. By right I want the user to be able to point a URL at a theme template, or a HTML file directly (becomes almost like apache in that sense).

Using go-git, I can ask the user to simply input the github URL and pagemanager can clone the theme's repo directly into the datafolder. 

Using go-git, I can also generate the html artifacts and push the results to github (and hence github pages). github credentials are stored in localStorage via javascript, so no backend necessary to persist the creds.

pagemanager should be -the- fastest way to stand a website up for a complete beginner. You can write simple HTML files and serve them immediately. You can experiment with HTML, CSS and JS. You can write your own themes and use the json schema files for basic data entry with the database.

CREATE TABLE pm_paginate_posts (
    ,order_by TEXT -- 'created_at'
    ,limit INT -- 10
    ,page_number INT -- 2
    ,page_ids JSONB -- '["1", "2", "3", "4", "5"]'
);

map /posts -> posts.html
/posts?p=2 -> posts.html {"p":"2"}

SELECT * FROM posts WHERE post_id = ANY(jsonb_array_elements_text(SELECT ids FROM pm_paginate WHERE table_name = ? AND limit = ? page = ?))

there is a problem where themes written for single-user will not work for multi-user because it doesn't take into account user_id. how do we want to tackle this? do i ask all theme authors to include a user_id predicate?
    by right the theme contents should be static and should not change between users
